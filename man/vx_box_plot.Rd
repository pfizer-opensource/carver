% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vx_boxplot.R
\name{vx_box_plot}
\alias{vx_box_plot}
\title{Generate Vaccine Boxplots for antibody titer using analysed data}
\usage{
vx_box_plot(
  datalist,
  axis_opts,
  series_opts,
  legend_opts = list(lab = "", pos = "bottom", dir = "horizontal"),
  box_opts = c(0.7, 0.9),
  ystat = "mean",
  griddisplay = "N"
)
}
\arguments{
\item{datalist}{List of Input datasets, retrieved from
\code{process_vx_box_data()} and \code{split_data_by_var()}}

\item{box_opts}{Vector containing:
\enumerate{
\item Width of individual boxes in plot and
\item Width of the interval between box-groups of X axis. eg. c(0.9, 0.9)
}}

\item{ystat}{Additional statistic to be plotted as markers. Default: \emph{mean}}
}
\value{
a list of lists, each of 2 elements:
\itemize{
\item \code{plot} Plot output
\item \code{footnote} Text to be considered as first line of footnote in report
}
}
\description{
Creates 2 similar plots with slightly different specifications according to
parameter i.e., ADA or NaB titer values are plotted in 2 separate graphs
}
\details{
Input data should come from output of \code{process_vx_box_data()} and
is expected to have the standardised variable XVAR and ada_nab_opts
}
\examples{
data(vx_box_data)
plot_data <- process_vx_box_data(
  dataset_adsl = vx_box_data$adsl,
  dataset_analysis = vx_box_data$adisda,
  adsl_subset = "RANDFL == 'Y'",
  analysis_subset = "((ANL08FL == 'Y')|(ANL09FL=='Y'))&(ARMCD!='')&(PARAMN \%in\% c(1, 2))",
  trtvar = "TRTA",
  trtsort = "TRTAN",
  xvar = "AVISIT",
  ystat = "mean",
  legendbign = "Y"
)
series_opts <- plot_aes_opts(
  datain = plot_data,
  series_color = c("red", "blue", "green"),
  series_shape = c("circlefilled", "trianglefilled", "squarefilled"),
  series_size = c(2, 2, 2)
)

# Splitting data to generate separate plots by `split_by` variable
data_list <- split_data_by_var(
  datain = plot_data,
  split_by_prefix = "SUBGRPVAR"
)

vx_box_plot(
  datalist = data_list,
  axis_opts = plot_axis_opts(
    xaxis_label = "Visits"
  ),
  series_opts = series_opts,
  legend_opts = list(
    lab = "Treatment",
    pos = "bottom",
    dir = "horizontal"
  ),
  ystat = "mean"
)[[1]][[1]]
}
