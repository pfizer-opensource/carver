% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bar_plot.R
\name{bar_plot}
\alias{bar_plot}
\title{Utility for Bar plot.}
\usage{
bar_plot(
  datain,
  series_var = "TRTVAR",
  series_labelvar = series_var,
  series_opts,
  axis_opts = plot_axis_opts(),
  legend_opts = list(label = "", pos = "bottom", dir = "horizontal"),
  bar_pos = "dodged",
  bar_width = 0.7,
  flip_plot = "N",
  griddisplay = "N",
  plot_title = NULL
)
}
\arguments{
\item{datain}{output dataset from mcat/msumstat data; processed in graphics}

\item{series_var}{Series (Treatment) Variable.}

\item{series_labelvar}{Series (Treatment) Variable labels for legend, if
different from \code{series_var}. If this is needed, then \code{series_labelvar}
should be a factor variable with levels corresponding to \code{series_var}, also a factor.}

\item{series_opts}{Series Variable styling options, a \code{list} containing
\code{color} and \code{contrast}.}

\item{axis_opts}{A \code{list} of axis specific options retrieved from \code{plot_axis_opts()}.}

\item{legend_opts}{Legend styling option, a \code{list} containing \code{label}, \code{pos}(position) and
\code{dir} (direction).}

\item{bar_pos}{Position of bars within group. Values: "dodged"/"stacked"}

\item{bar_width}{Width of individual bars \emph{numeric}}

\item{flip_plot}{To flip plot axes or not. Values: "Y"/"N"}

\item{griddisplay}{Display Grid \code{(Y/N)}.}

\item{plot_title}{Text to use as plot title, if required}
}
\value{
a ggplot object
}
\description{
Utility for Bar plot.
}
\details{
\code{bar_pos} determines position of bars when there is a grouping variable. If dodged is selected,
bars are placed adjacent to each other.
\code{series_opts} should be a list containing the element \code{color} (to fill bars), and optionally the
element \code{contrast} to outline the bars, per the \code{series_var} levels.
}
\examples{
data(adsl)

adsl_entry <- mentry(
  datain = adsl,
  subset = "EFFFL=='Y'",
  byvar = "RACE",
  trtvar = "TRT01A",
  trtsort = "TRT01AN",
  pop_fil = NA
)

adsl_sum <- msumstat(
  datain = adsl_entry,
  dptvar = "AGE",
  statvar = "mean"
)[["gsum"]] |>
  plot_display_bign(adsl_entry) |>
  dplyr::mutate(
    XVAR = BYVAR1,
    YVAR = as.numeric(mean)
  )
bar_plot(
  datain = adsl_sum,
  flip_plot = "N",
  series_opts = list(
    color = c("red", "gold", "cyan")
  ),
  axis_opts = plot_axis_opts(),
  legend_opts = list(
    label = "", pos = "bottom",
    dir = "horizontal"
  ),
  series_var = "TRTVAR",
  series_labelvar = "TRTTXT",
  bar_pos = "dodged",
  griddisplay = "N",
  plot_title = NULL
)

}
